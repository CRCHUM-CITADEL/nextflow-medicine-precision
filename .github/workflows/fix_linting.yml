name: Fix linting from a comment
on:
  issue_comment:
    types: [created]

# minimum permissions required for commenting and pushing
permissions:
  contents: write        # needed to push commits
  issues: write          # needed to create/update comments or reactions
  pull-requests: write   # for PR-related actions

jobs:
  fix-linting:
    runs-on: ubuntu-latest

    # Try to use a bot PAT if present, otherwise fall back to the built-in token
    env:
      BOT_TOKEN: ${{ secrets.nf_core_bot_auth_token || github.token }}

    if: >
      contains(github.event.comment.html_url, '/pull/') &&
      contains(github.event.comment.body, '@nf-core-bot fix linting') &&
      github.repository == 'citadel-test/test'

    steps:
      - name: Checkout repository (with bot token)
        uses: actions/checkout@v4
        with:
          token: ${{ env.BOT_TOKEN }}
          fetch-depth: 0

      - name: React on comment (acknowledge)
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ env.BOT_TOKEN }}
          comment-id: ${{ github.event.comment.id }}
          reactions: eyes

      # Get the PR (issue number is the PR number for PR comments)
      - name: Checkout Pull Request (gh CLI)
        run: |
          gh pr checkout ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ env.BOT_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run pre-commit
        id: pre-commit
        run: |
          pre-commit run --all-files
        continue-on-error: true

      - name: React if linting finished successfully
        if: steps.pre-commit.outcome == 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ env.BOT_TOKEN }}
          comment-id: ${{ github.event.comment.id }}
          reactions: "+1"

      - name: Commit & push changes (if hooks changed files)
        id: commit-and-push
        if: steps.pre-commit.outcome == 'failure'
        run: |
          git config user.email "core@nf-co.re"
          git config user.name "nf-core-bot"
          git config push.default upstream

          # Only commit/push if there are changes
          if git status --porcelain | grep -q .; then
            git add -A
            git commit -m "[automated] Fix code linting" || echo "Nothing to commit"
            # push will fail if token doesn't have push rights (e.g. PR from fork without PAT)
            git push https://x-access-token:${{ env.BOT_TOKEN }}@github.com/citadel-test/test.git HEAD:dev
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ env.BOT_TOKEN }}

      - name: React if linting errors were fixed
        if: steps.commit-and-push.outcome == 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ env.BOT_TOKEN }}
          comment-id: ${{ github.event.comment.id }}
          reactions: hooray

      - name: React if linting errors were not fixed
        if: steps.commit-and-push.outcome == 'failure'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ env.BOT_TOKEN }}
          comment-id: ${{ github.event.comment.id }}
          reactions: confused

      - name: Notify user when automatic fix failed
        if: steps.commit-and-push.outcome == 'failure'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ env.BOT_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            @${{ github.actor }} I tried to fix the linting errors, but it didn't work. Please fix them manually.
            See [CI log](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.
