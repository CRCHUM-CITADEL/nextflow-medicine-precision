/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    CRCHUM-CITADEL/nextflow-sante-precision Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Pipeline to run. Options: ["clinical", "genomic"]
    mode                 = "genomic"

    // Input options
    input                      = "./samplesheet.csv"

    // helper files:
    gencode_annotations        = "/project/60005/shared/resources/genomes/grch38/annotations/gencode/gencode.v44.annotation.gtf"
    ensembl_annotations        = "/project/60005/shared/resources/genomes/grch38/annotations/ensembl/biomart_grch38_ensembl_113.tsv"
    vep_cache                  = "/project/60005/shared/software/ensembl-vep-release-113.4/cache/homo_sapiens/"
    vep_params                 = "--cache-version 113 --ncbi-build=GRCh38"
    pcgr_data                  = "/project/60005/shared/resources/genomes/grch38/pcgr_ref_data" // if empty, will attempt to download from wget https://insilico.hpc.uio.no/pcgr/pcgr_ref_data.20240621.grch38.tgz, which might not be the correct version!

    // genome reference fasta file
    genome_reference             = "/project/60005/shared/resources/genomes/grch38/dragen/Homo_sapiens_assembly38.fasta"

    // containers
    container_pcgr               = "/project/60005/shared/sub_projects/cbioportal_nextflow/containers/ghcr.io-sigven-pcgr-2.2.5.sif"
    container_python             = "/project/60005/shared/sub_projects/cbioportal_nextflow/containers/ghcr.io-crchum-citadel-sdp-python-3.12.sif"
    container_r                  = "/project/60005/shared/sub_projects/cbioportal_nextflow/containers/ghcr.io-crchum-citadel-sdp-r-4.5.1.sif"
    container_vcf2maf            = "/project/60005/shared/sub_projects/cbioportal_nextflow/containers/ghcr.io-nfcore-vcf2maf.sif"

    // Boilerplate options
    outdir                       = 'output'
    input_dir                    = "${projectDir}"
    // publish_dir_mode          = 'copy' // this pollutes the output directory with output from processes so I removed it for now
    email                        = 'justin.bellavance.chum@ssss.gouv.qc.ca'
    email_on_fail                = 'justin.bellavance.chum@ssss.gouv.qc.ca'
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    version                      = false
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        apptainer.pullTimeout   = "5s"
    }
    gpu {
        apptainer.runOptions    = '--nv'
    }
    slurm {
        executor {
            name = 'slurm'
            queueSize = 250  // Maximum number of jobs that can be submitted at once
            submitRateLimit = '10 sec'  // Limit job submission rate
            pollInterval = '30 sec'  // How often to check job status
            queueStatInterval = '5 min'  // How often to fetch queue status
            exitReadTimeout = '90 sec'  // Timeout for reading exit status
        }

        process {
            // Default SLURM directives for all processes
            executor = 'slurm'
            clusterOptions = '--account=def-chasse'  // Replace with your account

            // Default resource requirements
            cpus = 1
            memory = '4 GB'
            time = '2h'

            // Error handling
            errorStrategy = 'retry'
            maxRetries = 3

        }
    }
    test {
        process {
            resourceLimits = [
                cpus: 1,
                memory: '4.GB',
                time: '2.h'
            ]
        }
        params {
                input_dir           = "${projectDir}"
                input               = "${projectDir}/assets/test_data/samplesheet/test_dna_vcf.csv"
                gencode_annotations = "${projectDir}/assets/test_data/annotations/gencode.v29.annotation.chr21.gtf"
                ensembl_annotations = "${projectDir}/assets/test_data/annotations/biomart_grch38_ensembl_113_chr21.tsv"
                genome_reference    = "${projectDir}/assets/test_data/reference/Homo_sapiens_assembly38_chr21.fasta"
                vep_cache           = "" // if empty, will attempt to download the chr21 test data set
                vep_params         = "--cache-version 112 --ncbi-build=GRCh38"
                pcgr_data           = "" // if empty, will attempt to download from wget https://insilico.hpc.uio.no/pcgr/pcgr_ref_data.20240621.grch38.tgz

                container_r         = "oras://ghcr.io/crchum-citadel/sdp-r:4.5.1"
                container_python    = "oras://ghcr.io/crchum-citadel/sdp-python:3.12"
                container_pcgr      = "oras://ghcr.io/sigven/pcgr:2.1.2.singularity"
        }
    }
}

// Load nf-core custom profiles from different institutions

// If params.custom_config_base is set AND either the NXF_OFFLINE environment variable is not set or params.custom_config_base is a local path, the nfcore_custom.config file from the specified base path is included.
// Load CRCHUM-CITADEL/nextflow-sante-precision custom profiles from different institutions.
includeConfig params.custom_config_base && (!System.getenv('NXF_OFFLINE') || !params.custom_config_base.startsWith('http')) ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"


// Load CRCHUM-CITADEL/nextflow-sante-precision custom profiles from different institutions.
// TODO nf-core: Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
// includeConfig params.custom_config_base && (!System.getenv('NXF_OFFLINE') || !params.custom_config_base.startsWith('http')) ? "${params.custom_config_base}/pipeline/test.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
singularity.registry  = 'ghcr.io'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'CRCHUM-CITADEL/nextflow-sante-precision'
    contributors    = [
        // TODO nf-core: Update the field with the details of the contributors to your pipeline. New with Nextflow version 24.10.0
        [
            name: 'Justin Bellavance',
            affiliation: 'CITADEL',
            email: 'justin.bellavance.chum@ssss.gouv.qc.ca',
            github: '',
            contribution: [], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: ''
        ],
    ]
    homePage        = 'https://github.com/CRCHUM-CITADEL/nextflow-sante-precision'
    description     = """Pipeline Nextflow pour le besoin des projets de santé de précision"""
    mainScript      = 'main.nf'
    defaultBranch   = 'main'
    nextflowVersion = '!>=24.04.7'
    version         = '0.3.0dev'
    doi             = ''
}


plugins {
    id 'nf-schema@2.5.1'
}

validation {
    lenientMode = true
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
